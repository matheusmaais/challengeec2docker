name: Deploy Docker and Ec2
on:
  workflow_dispatch:
  push:
    branches:
      - "main"
jobs:
  BuildContainer:
    name: Build Container
    runs-on: ubuntu-latest
    env:
      DOCKER_REPO: matheusmaais
      IMAGE_NAME: hellownode
      IMAGE_TAG: main
    steps:
      - name: Checkout Application
        uses: actions/checkout@v3
    
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build And Push Docker Image
        run: |
          docker build -t ${DOCKER_REPO}/${IMAGE_NAME}:${IMAGE_TAG} .
          docker image push ${DOCKER_REPO}/${IMAGE_NAME}:${IMAGE_TAG}

  CreateInfra:
    name: Create AWS Infra
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Application
        uses: actions/checkout@v3
    
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.POC_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.POC_AWS_SECRET_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.13.5

      - name: Terraform Init and Plan
        run: |
          cd terraform/
          terraform init
          terraform plan
        continue-on-error: false

      - name: Terraform Apply
        run: |
          cd terraform/
          terraform apply -auto-approve
        continue-on-error: false

  DeployingDocker:
    name: Deploying Docker
    runs-on: ubuntu-latest
    steps:
    
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.POC_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.POC_AWS_SECRET_KEY }}
          aws-region: us-east-1


      - name: Terraform Apply
        run: sleep 180s
        continue-on-error: false

      - name: Deleting unused docker images
        run: |
          nohup aws ssm send-command \
          --document-name "AWS-RunShellScript" \
          --parameters commands="sudo docker run -d -p 8080:3000 matheusmaais/hellownode:main" \
          --targets Key=tag:Name,Values=DevopsProjectEc2